{"version":3,"sources":["styles/GlobalStyles.js","hooks/useNotification.js","shared/Container.js","shared/Typography.js","shared/Image.js","shared/Button.js","shared/Notification.js","App/Uploader/Uploader.elements.js","styles/themes.js","App/Uploader/Uploader.js","App/Uploading/Uploading.elements.js","App/Uploading/Uploading.js","App/Uploaded/Uploaded.elements.js","App/Uploaded/Uploaded.js","App.js","index.js"],"names":["GlobalStyles","createGlobalStyle","useNotification","useState","showNotification","setShowNotification","notificationRef","useRef","useEffect","current","notificationClasslist","classList","add","setTimeout","remove","notificationTime","Container","styled","div","Typography","p","fz","theme","fw","color","colors","dark","align","Image","img","attrs","src","alt","size","PrimaryBtn","button","blue","dark_blue","Notification","bg_color","success","Dropzone","section","soft_light_blue","isDragActive","green","light_blue","DragDropText","light_gray","InputFile","input","props","type","error","soft_gray","gray","mediaQueries","above768","validExtensions","Uploader","setSectionShown","image","setImage","setError","inputFileRef","extension","setExtension","onDrop","useCallback","acceptedFiles","useDropzone","getRootProps","getInputProps","splitted","name","split","length","includes","as","ref","onChange","e","target","files","onClick","click","UploadingBar","Bar","width","Uploading","setImageUrl","barRef","progressPercentage","setProgressPercentage","a","formData","FormData","append","process","axios","post","headers","onUploadProgress","progress","loaded","total","res","statusText","data","secure_url","uploadImage","Tick","i","className","ImageUploaded","imageUrl","Link","Input","value","disabled","CopyBtn","BackToUploader","Uploaded","inputRef","select","document","execCommand","App","sectionShown","ReactDOM","render","getElementById"],"mappings":"4PAGaA,EAAeC,YAAH,koB,OCEZC,EAAkB,WAE3B,MAAkDC,oBAAU,GAA5D,mBAAQC,EAAR,KAA0BC,EAA1B,KACMC,EAAkBC,mBAyBxB,OAvBAC,qBAAU,WAGN,GAAMF,EAAgBG,QAAtB,CAEA,IAAMC,EAAwBJ,EAAgBG,QAAQE,UAGtDD,EAAsBE,IAAK,UAG3BC,YAAW,WACPH,EAAsBI,OAAQ,UAC9BJ,EAAsBE,IAAK,aArBd,MAyBjBC,YAAY,WACRR,GAAqB,KACtBU,SAEJ,CAAEX,EAAkBE,IAEhB,CAAEA,EAAiBF,EAAkBC,I,eC/BnCW,EAAYC,IAAOC,IAAV,+LCATC,EAAaF,IAAOG,EAAV,gHACL,gBAAIC,EAAJ,EAAIA,GAAIC,EAAR,EAAQA,MAAR,OAAqBD,GAAMC,EAAMD,GAAI,QACnC,qBAAIE,IAAgB,SAC1B,gBAAIC,EAAJ,EAAIA,MAAOF,EAAX,EAAWA,MAAX,OAAwBE,GAASF,EAAMG,OAAOC,QACxC,qBAAIC,OAAsB,YCJjCC,EAAQX,IAAOY,IAAIC,OAAO,kBAAqB,CACxDC,IADmC,EAAIA,IAEvCC,IAFmC,EAASA,OAA3Bf,CAAH,wEAIJ,qBAAIgB,MAAoB,UAC/B,kBAA2B,WAA3B,EAAIN,OAAmC,qBAChC,qBAAIH,OAAsB,WCN3BU,EAAajB,IAAOkB,OAAV,mSAEJ,qBAAIb,MAAmBG,OAAOW,QAU1B,qBAAId,MAAmBG,OAAOY,aCZxCC,EAAerB,IAAOC,IAAV,iQAMN,gBAAII,EAAJ,EAAIA,MAAJ,SAAWiB,UAA4BjB,EAAMG,OAAOe,WCA1DC,GALoBxB,YAAQD,EAARC,CAAH,qEAKNA,IAAOyB,QAAV,wSAMF,qBAAIpB,MAAmBG,OAAOkB,mBAEvB,gBAAIC,EAAJ,EAAIA,aAActB,EAAlB,EAAkBA,MAAlB,OAA+BsB,EAAetB,EAAMG,OAAOoB,MAAQvB,EAAMG,OAAOqB,eAK7FC,EAAe9B,YAAQE,EAARF,CAAH,8EACX,gBAAI2B,EAAJ,EAAIA,aAActB,EAAlB,EAAkBA,MAAlB,OAA+BsB,EAAetB,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOuB,cAIhFC,EAAYhC,IAAOiC,MAAMpB,OAAO,SAAAqB,GAAK,MAAK,CACnDC,KAAM,UADenC,CAAH,gDCxBTK,EAAQ,CACjBG,OAAQ,CACJW,KAAM,UACNC,UAAW,UACXS,WAAY,UACZD,MAAO,UACPL,QAAS,UACTa,MAAO,UACPV,gBAAiB,UACjBW,UAAW,UACX5B,KAAM,UACN6B,KAAM,UACNP,WAAY,WAEhB3B,GAAI,CACA,IAAO,2BACP,IAAO,2BACP,IAAO,2BACP,IAAO,2BACP,IAAO,2BACP,IAAO,yBACP,IAAO,yBACP,IAAO,2BACP,IAAQ,4BAEZmC,aAAc,CACVC,SAAU,uB,OCpBZC,EAAkB,CAAE,OAAQ,MAAO,MAAO,OAEnCC,EAAW,SAAC,GAAsD,IAAnDC,EAAkD,EAAlDA,gBAAiBC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,SAEpDC,EAAezD,mBACrB,EAAoCJ,mBAAU,MAA9C,mBAAQ8D,EAAR,KAAmBC,EAAnB,KACA,EAAmEhE,IAAnE,mBAAQI,EAAR,KAAyBF,EAAzB,KAA2CC,EAA3C,KAEM8D,EAASC,uBAAa,SAAAC,GAExBP,EAAUO,EAAe,MAC1B,CAAEP,IAOL,EAAsDQ,YAAa,CAAEH,WAA7DI,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,cAAe5B,EAArC,EAAqCA,aAqBrC,OAnBApC,qBAAU,WAEN,GAAMqD,EAAN,CAGA,IAAMY,EAAWZ,EAAMa,KAAKC,MAAO,KAC7BV,EAAYQ,EAAUA,EAASG,OAAS,GAE9C,IAAMlB,EAAgBmB,SAAUZ,GAG5B,OAFA5D,GAAqB,QACrB6D,EAAcD,GAIlBF,EAAU,MACVH,EAAiB,gBAElB,CAAEC,EAAOD,EAAiBG,EAAU1D,IAGnC,eAACW,EAAD,WACI,cAACG,EAAD,CAAY2D,GAAG,KAAf,+BAIA,cAAC3D,EAAD,CACIE,GAAKC,EAAMD,GAAI,KACfG,MAAQF,EAAMG,OAAO8B,KAFzB,yCAOA,eAACd,EAAD,2BACS8B,KADT,IAEI3B,aAAeA,EAFnB,UAII,qCAAY4B,MACZ,cAAC5C,EAAD,CACIG,IAAI,mBACJC,IAAI,+BACJC,KAAK,QAGT,cAACc,EAAD,CACI1B,GAAKC,EAAMD,GAAI,KACfG,MAAQF,EAAMG,OAAOuB,WACrBJ,aAAeA,EAHnB,6CASJ,cAACzB,EAAD,CACIE,GAAKC,EAAMD,GAAI,KACfG,MAAQF,EAAMG,OAAOuB,WAFzB,gBAOA,cAACC,EAAD,CACI8B,IAAMf,EACNgB,SApEY,SAAEC,GAEtBnB,EAAUmB,EAAEC,OAAOC,MAAO,OAqEtB,cAACjD,EAAD,CACIkD,QAAU,kBAAMpB,EAAavD,QAAQ4E,SADzC,2BAMIjF,GACA,eAACkC,EAAD,CACIyC,IAAMzE,EACNiC,SAAWjB,EAAMG,OAAO4B,MAF5B,UAIMY,EAJN,oC,0CCjGHqB,EAAerE,IAAOC,IAAV,2HAOZqE,EAAMtE,IAAOC,IAAV,gNAMF,qBAAIsE,OAAsB,QAGrB,qBAAIlE,MAAmBG,OAAOW,QCRpCqD,EAAY,SAAC,GAAmE,IAAhE5B,EAA+D,EAA/DA,MAAOD,EAAwD,EAAxDA,gBAAiB8B,EAAuC,EAAvCA,YAAa3B,EAA0B,EAA1BA,SAAUD,EAAgB,EAAhBA,SAElE6B,EAASpF,mBACf,EAAsDJ,mBAAU,GAAhE,mBAAQyF,EAAR,KAA4BC,EAA5B,KAyCA,OAvCArF,qBAAU,YAEW,uCAAG,8BAAAsF,EAAA,6DAEVC,EAAW,IAAIC,UAEZC,OAAQ,OAAQpC,GACzBkC,EAASE,OAAQ,gBAAiBC,wBALlB,SAOEC,IAAMC,KAhBb,yDAgBmCL,EAAU,CACpDM,QAAS,CACL,eAAgB,uBAEpBC,iBAAkB,SAAEC,GAEhB,IAAQC,EAAkBD,EAAlBC,OAAQC,EAAUF,EAAVE,MAGhBZ,EADsC,IAATW,EAAiBC,MAftC,UAqBU,QAdpBC,EAPU,QAqBLC,WArBK,wBAsBZ7C,EAAU,MACVC,EAAU,+CACVH,EAAiB,YAxBL,2BA4BhBG,EAAU,IACVH,EAAiB,YACjB8B,EAAagB,EAAIE,KAAKC,YA9BN,4CAAH,qDAiCjBC,KAED,CAAEjD,EAAO6B,EAAa9B,EAAiBG,EAAUD,IAGhD,eAAC9C,EAAD,WACI,cAACG,EAAD,CACIQ,MAAM,OACNN,GAAKC,EAAMD,GAAI,KAFnB,0BAOA,cAACiE,EAAD,UACI,cAACC,EAAD,CACIR,IAAMY,EACNH,MAAQI,EAAqB,YC/DpCmB,EAAO9F,IAAO+F,EAAElF,OAAO,iBAAO,CACvCmF,UAAW,yBADKhG,CAAH,uFAGC,qBAAIK,MAAmBD,GAAI,QAC/B,qBAAIC,MAAmBG,OAAOoB,SAI/BqE,EAAgBjG,IAAOyB,QAAV,+JACF,qBAAIyE,YAOfC,EAAOnG,IAAOC,IAAV,qDAIJmG,GAAQpG,IAAOiC,MAAMpB,OAAO,kBAAqB,CAC1DwF,MADqC,EAAIH,SAEzCI,UAAU,KAFOtG,CAAH,8MAOC,qBAAIK,MAAmBG,OAAOkB,mBACxB,qBAAIrB,MAAmBG,OAAO6B,aACzC,qBAAIhC,MAAmBG,OAAOC,QAC1B,qBAAIJ,MAAmBD,GAAI,QAIhCmG,GAAUvG,YAAQiB,EAARjB,CAAH,oKASPwG,GAAiBxG,IAAOG,EAAV,6ICvCdsG,GAAW,SAAC,GAA+C,IAA5CP,EAA2C,EAA3CA,SAAUvD,EAAiC,EAAjCA,gBAAiBE,EAAgB,EAAhBA,SAE7C6D,EAAWpH,mBACjB,EAAmEL,IAAnE,mBAAQI,EAAR,KAAyBF,EAAzB,KAA2CC,EAA3C,KAuBA,OACI,eAACW,EAAD,WAEI,cAACyG,GAAD,CACIrC,QATW,WACnBxB,EAAiB,YACjBE,EAAU,OAMN,mCAMA,cAACiD,EAAD,IAEA,cAAC5F,EAAD,CAAY2D,GAAG,KAAf,oCAIA,cAACoC,EAAD,CACIC,SAAWA,IAGf,eAACC,EAAD,WACI,cAACC,GAAD,CACIF,SAAWA,EACXpC,IAAM4C,IAEV,cAACH,GAAD,CAASpC,QA7CF,WAGfuC,EAASlH,QAAQ8G,UAAW,EAG5BI,EAASlH,QAAQmH,SACjBC,SAASC,YAAa,QAGtBH,EAASlH,QAAQ8G,UAAW,EAG5BlH,GAAqB,IAgCb,0BAKAD,GACA,cAACkC,EAAD,CACIyC,IAAMzE,EADV,sCCrDHyH,GAAM,WAEf,MAAmE7H,IAAnE,mBAAQI,EAAR,KAAyBF,EAAzB,KAA2CC,EAA3C,KACA,EAA0CF,mBAAU,YAApD,mBAAQ6H,EAAR,KAAsBpE,EAAtB,KACA,EAA4BzD,mBAAU,MAAtC,mBAAQ0D,EAAR,KAAeC,EAAf,KACA,EAAkC3D,mBAAU,IAA5C,mBAAQgH,EAAR,KAAkBzB,EAAlB,KACA,EAA4BvF,mBAAU,IAAtC,mBAAQkD,EAAR,KAAeU,EAAf,KAQA,OANAvD,qBAAU,WACD6C,GACDhD,GAAqB,KAE1B,CAAEgD,EAAOhD,IAGR,eAAC,IAAD,CAAeiB,MAAQA,EAAvB,UACyB,aAAjB0G,GACA,cAAC,EAAD,CACIpE,gBAAkBA,EAClBC,MAAQA,EACRC,SAAWA,EACXC,SAAWA,IAGE,cAAjBiE,GACA,cAAC,EAAD,CACInE,MAAQA,EACRC,SAAWA,EACXF,gBAAkBA,EAClB8B,YAAcA,EACd3B,SAAWA,IAGE,aAAjBiE,GACA,cAAC,GAAD,CACIb,SAAWA,EACXvD,gBAAkBA,EAClBE,SAAWA,IAGf1D,GACA,cAACkC,EAAD,CACIyC,IAAMzE,EACNiC,SAAWjB,EAAMG,OAAO4B,MAF5B,SAIMA,Q,YC9CtB4E,IAASC,OACL,qCACI,cAAClI,EAAD,IACA,cAAC,GAAD,OAEJ6H,SAASM,eAAgB,W","file":"static/js/main.bad2c97d.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\r\n    *, *::before, *::after {\r\n        box-sizing: border-box;\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n\r\n    html, body, #root {\r\n        min-height: 100vh;\r\n    }\r\n\r\n    #root {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n\r\n    body {\r\n        overflow-x: hidden;\r\n        font-family: 'Poppins', sans-serif;\r\n        font-weight: 500;\r\n        background-color: #FAFAFB;\r\n    }\r\n    \r\n    ul {\r\n        list-style: none;\r\n    }\r\n\r\n    a {\r\n        text-decoration: none;\r\n        color: inherit;\r\n    }\r\n\r\n    img {\r\n        max-width: 100%;\r\n    }\r\n`\r\n","import { useState, useEffect, useRef } from 'react';\r\n\r\nconst notificationTime = 2500;\r\nconst animationTime = 750;\r\n\r\nexport const useNotification = () => {\r\n   \r\n    const [ showNotification, setShowNotification ] = useState( false );\r\n    const notificationRef = useRef();\r\n\r\n    useEffect(() => {\r\n\r\n        // Si no hay ref retornamos\r\n        if ( !notificationRef.current ) return;\r\n\r\n        const notificationClasslist = notificationRef.current.classList;\r\n\r\n        // Iniciamos fadeIn\r\n        notificationClasslist.add( 'fadeIn' );\r\n\r\n        // Iniciamos fadeOut animación\r\n        setTimeout(() => {\r\n            notificationClasslist.remove( 'fadeIn' );\r\n            notificationClasslist.add( 'fadeOut' );\r\n        }, notificationTime );\r\n\r\n        // Cuando termine la animación sacamos el fadeOut y sacamos la animación\r\n        setTimeout( () => {\r\n            setShowNotification( false );\r\n        }, notificationTime + animationTime );\r\n        \r\n    }, [ showNotification, notificationRef ] );\r\n       \r\n    return [ notificationRef, showNotification, setShowNotification ];\r\n}","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    display: grid;\r\n    grid-gap: 2rem;\r\n    width: min(75%, 600px);\r\n    background: #fff;\r\n    padding: 2rem;\r\n    box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.2);\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Typography = styled.p`\r\n    font-size: ${ ( { fz, theme } ) => fz || theme.fz[ '400' ] };\r\n    font-weight: ${ ( { fw } ) => fw || '500' };\r\n    color: ${ ( { color, theme } ) => color || theme.colors.dark };\r\n    text-align:  ${ ( { align } ) => align || 'center' };\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Image = styled.img.attrs( ( { src, alt } ) => ({\r\n    src,\r\n    alt \r\n}) )`\r\n    width: ${ ( { size } ) => size || 'auto' };\r\n    ${ ( { align } ) => align === 'center' && 'margin: 0 auto;' };\r\n    color: ${ ( { color } ) => color || 'black' };\r\n`;","import styled from 'styled-components';\r\n\r\nexport const PrimaryBtn = styled.button`\r\n    display: block;\r\n    background: ${ ( { theme } ) => theme.colors.blue };\r\n    color: white;\r\n    border-radius: 7px;\r\n    border: none;\r\n    padding: .8rem 1rem;\r\n    margin: 0 auto;\r\n    cursor: pointer;\r\n    transition: background .3s ease;\r\n\r\n    &:hover {\r\n        background: ${ ( { theme } ) => theme.colors.dark_blue };\r\n    }\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Notification = styled.div`\r\n    position: fixed;\r\n    left: 50%;\r\n    bottom: 20px;\r\n    transform: translateX( -50% );\r\n    padding: .8rem 1.5rem;\r\n    background: ${ ( { theme, bg_color } ) => bg_color || theme.colors.success };\r\n    color: white;\r\n    border-radius: 5px;\r\n    text-align: center;\r\n    opacity: 0;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { Container, Typography } from 'shared/';\r\n\r\nexport const UploaderContainer = styled( Container )`\r\n    display: grid;\r\n    grid-gap: 2rem;\r\n`;\r\n\r\nexport const Dropzone = styled.section`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    gap: 4rem;\r\n    background: ${ ( { theme } ) => theme.colors.soft_light_blue };\r\n    border-radius: 10px;\r\n    border: 2px dashed ${ ( { isDragActive, theme } ) => isDragActive ? theme.colors.green : theme.colors.light_blue };\r\n    padding: 2.8rem 1.4rem;\r\n    transition: border .3s ease;\r\n`;\r\n\r\nexport const DragDropText = styled( Typography )`\r\n    color: ${ ( { isDragActive, theme } ) => isDragActive ? theme.colors.dark : theme.colors.light_gray };\r\n    transition: color .3s ease;\r\n`;\r\n\r\nexport const InputFile = styled.input.attrs( props => ({\r\n    type: 'file'\r\n}) )`\r\n    display: none;\r\n`\r\n","\r\n\r\nexport const theme = {\r\n    colors: {\r\n        blue: '#2F80ED',\r\n        dark_blue: '#146DE1',\r\n        light_blue: '#A1C6F7',\r\n        green: '#219653',\r\n        success: '#36d37a',\r\n        error: '#f33800',\r\n        soft_light_blue: '#F6F8FB',\r\n        soft_gray: '#E0E0E0',\r\n        dark: '#4F4F4F',\r\n        gray: '#828282',\r\n        light_gray: '#BDBDBD',\r\n    },\r\n    fz: {\r\n        '200': 'clamp(13px, 2.5vw, 18px)',\r\n        '300': 'clamp(15px, 2.8vw, 23px)',\r\n        '400': 'clamp(18px, 3.2vw, 26px)',\r\n        '500': 'clamp(20px, 3.6vw, 32px)',\r\n        '600': 'clamp(30px, 4.8vw, 42px)',\r\n        '700': 'clamp(38px, 6vw, 55px)',\r\n        '800': 'clamp(50px, 8vw, 70px)',\r\n        '900': 'clamp(65px, 10vw, 100px)',\r\n        '1000': 'clamp(70px, 13vw, 120px)',\r\n    },\r\n    mediaQueries: {\r\n        above768: '(min-width: 768px)'\r\n    }\r\n}\r\n","import React, { useEffect, useCallback, useRef, useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone'\r\n\r\nimport { useNotification } from 'hooks/useNotification';\r\nimport { DragDropText, Dropzone, InputFile } from './Uploader.elements';\r\nimport { Container, Image, Typography, PrimaryBtn, Notification } from 'shared';\r\nimport { theme } from 'styles/themes';\r\n\r\nconst validExtensions = [ 'jpeg', 'jpg', 'png', 'svg' ];\r\n\r\nexport const Uploader = ( { setSectionShown, image, setImage, setError } ) => {\r\n\r\n    const inputFileRef = useRef();\r\n    const [ extension, setExtension ] = useState( null );\r\n    const [ notificationRef, showNotification, setShowNotification ] = useNotification();    \r\n    \r\n    const onDrop = useCallback( acceptedFiles => {\r\n        // Se ejecutará cuando se dejen caer archivos\r\n        setImage( acceptedFiles[ 0 ] );\r\n    }, [ setImage ] );\r\n\r\n    const handleInputFile = ( e ) => {\r\n        // Se ejecutará cuando se seleccionen imagenes\r\n        setImage( e.target.files[ 0 ] );\r\n    }\r\n\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone( { onDrop } );\r\n\r\n    useEffect(() => {\r\n        \r\n        if ( !image ) return;\r\n\r\n        // Verificamos que las extensiones sean válidas\r\n        const splitted = image.name.split( '.' );\r\n        const extension = splitted[ splitted.length - 1 ];\r\n\r\n        if ( !validExtensions.includes( extension ) ) {\r\n            setShowNotification( true );\r\n            setExtension( extension );\r\n            return;\r\n        }\r\n\r\n        setError( null );\r\n        setSectionShown( 'uploading' );\r\n\r\n    }, [ image, setSectionShown, setError, setShowNotification ] );\r\n\r\n    return (\r\n        <Container> \r\n            <Typography as=\"h2\">\r\n                Upload your image\r\n            </Typography>\r\n\r\n            <Typography\r\n                fz={ theme.fz[ '300' ] }\r\n                color={ theme.colors.gray }\r\n            >\r\n                File should be Jpeg, Png...\r\n            </Typography>\r\n\r\n            <Dropzone\r\n                { ...getRootProps() }\r\n                isDragActive={ isDragActive }\r\n            >\r\n                <input { ...getInputProps() } />\r\n                <Image\r\n                    src=\"images/image.svg\"\r\n                    alt=\"Mountain with clouds drawing\"\r\n                    size=\"35%\"\r\n                />\r\n\r\n                <DragDropText\r\n                    fz={ theme.fz[ '300' ] }\r\n                    color={ theme.colors.light_gray }\r\n                    isDragActive={ isDragActive }\r\n                >\r\n                    Drag & Drop your image here\r\n                </DragDropText>\r\n            </Dropzone>\r\n\r\n            <Typography\r\n                fz={ theme.fz[ '300' ] }\r\n                color={ theme.colors.light_gray }\r\n            >\r\n                Or\r\n            </Typography>\r\n\r\n            <InputFile\r\n                ref={ inputFileRef }\r\n                onChange={ handleInputFile }\r\n            />\r\n\r\n            <PrimaryBtn\r\n                onClick={ () => inputFileRef.current.click() }\r\n            >\r\n                Choose a file\r\n            </PrimaryBtn>\r\n\r\n            { ( showNotification ) &&\r\n                <Notification\r\n                    ref={ notificationRef }\r\n                    bg_color={ theme.colors.error }\r\n                >\r\n                    { extension } is not a valid extension!\r\n                </Notification> }\r\n        </Container>\r\n    )\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const UploadingBar = styled.div`\r\n    position: relative;\r\n    background: #f2f2f2;\r\n    border-radius: 30px;\r\n    height: 8px;\r\n`;\r\n\r\nexport const Bar = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    min-width: 5%;\r\n    width: ${ ( { width } ) => width || '5%' };\r\n    max-width: 100%;\r\n    border-radius: 4px;\r\n    background: ${ ( { theme } ) => theme.colors.blue };\r\n    \r\n`;","import React, { useRef, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { theme } from 'styles/themes';\r\nimport { Container, Typography } from 'shared';\r\nimport { Bar, UploadingBar } from './Uploading.elements';\r\n\r\n\r\nconst CLOUDINARY_URL = 'https://api.cloudinary.com/v1_1/dalpbowt0/image/upload';\r\n\r\nexport const Uploading = ( { image, setSectionShown, setImageUrl, setError, setImage } ) => {\r\n\r\n    const barRef = useRef();\r\n    const [ progressPercentage, setProgressPercentage ] = useState( 0 );\r\n\r\n    useEffect(() => {\r\n        \r\n        const uploadImage = async() => {\r\n            \r\n            const formData = new FormData();\r\n\r\n            formData.append( 'file', image );\r\n            formData.append( 'upload_preset', process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET );\r\n\r\n            const res = await axios.post( CLOUDINARY_URL, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                },\r\n                onUploadProgress: ( progress ) => {\r\n                   \r\n                    const { loaded, total } = progress;\r\n\r\n                    const progressPercentage = ( loaded * 100 ) / total;\r\n                    setProgressPercentage( progressPercentage );\r\n                },\r\n            } );\r\n\r\n            // Error al uploadear\r\n            if ( ( res.statusText !== 'OK' ) ) {\r\n                setImage( null );\r\n                setError( 'There was a mistake uploading your image...' );\r\n                setSectionShown( 'uploader' );\r\n                return;\r\n            }\r\n            \r\n            setError( '' );\r\n            setSectionShown( 'uploaded' );\r\n            setImageUrl( res.data.secure_url );\r\n        }\r\n\r\n        uploadImage();\r\n\r\n    }, [ image, setImageUrl, setSectionShown, setError, setImage ] );\r\n\r\n    return (\r\n        <Container>\r\n            <Typography\r\n                align=\"left\"\r\n                fz={ theme.fz[ '300' ] }\r\n            >\r\n                Uploading...\r\n            </Typography>\r\n\r\n            <UploadingBar>\r\n                <Bar\r\n                    ref={ barRef }\r\n                    width={ progressPercentage + '%' }\r\n                />\r\n            </UploadingBar>\r\n        </Container>\r\n    )\r\n}\r\n","import styled from 'styled-components';\r\nimport { PrimaryBtn } from 'shared';\r\n\r\nexport const Tick = styled.i.attrs( () => ({\r\n    className: \"fas fa-check-circle\"\r\n}) )`\r\n    font-size: ${ ( { theme } ) => theme.fz[ '700' ] };\r\n    color: ${ ( { theme } ) => theme.colors.green };\r\n    margin: 0 auto;\r\n`;\r\n\r\nexport const ImageUploaded = styled.section`\r\n    background: url( ${ ( { imageUrl } ) => imageUrl };\r\n     )\r\n                no-repeat center center / cover;\r\n    height: 15rem;\r\n    border-radius: 15px;\r\n`;\r\n\r\nexport const Link = styled.div`\r\n    position: relative;\r\n`;\r\n\r\nexport const Input = styled.input.attrs( ( { imageUrl } ) => ({\r\n    value: imageUrl,\r\n    disabled: true\r\n}) )`\r\n    width: 100%;\r\n    padding: .9rem 1rem;\r\n    border-radius: 15px;\r\n    background: ${ ( { theme } ) => theme.colors.soft_light_blue };\r\n    border: 1px solid ${ ( { theme } ) => theme.colors.soft_gray };\r\n    color: ${ ( { theme } ) => theme.colors.dark };\r\n    font-size: ${ ( { theme } ) => theme.fz[ '200' ] };\r\n    outline: none;\r\n`;\r\n\r\nexport const CopyBtn = styled( PrimaryBtn )`\r\n    position: absolute;\r\n    top: 2px;\r\n    bottom: 2px;\r\n    right: 2px;\r\n    padding: 0 1rem;\r\n    border-radius: 3px 15px 15px 3px;\r\n`;\r\n\r\nexport const BackToUploader = styled.p`\r\n    position: absolute;\r\n    top: 20px;\r\n    left: 20px;\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n`;","import React, { useRef } from 'react';\r\n\r\nimport { useNotification } from 'hooks/useNotification';\r\nimport { Notification, Container, Typography } from 'shared';\r\nimport { BackToUploader, CopyBtn, ImageUploaded, Input, Link, Tick } from './Uploaded.elements';\r\n\r\n\r\nexport const Uploaded = ( { imageUrl, setSectionShown, setImage } ) => {\r\n\r\n    const inputRef = useRef();\r\n    const [ notificationRef, showNotification, setShowNotification ] = useNotification();    \r\n\r\n    const handleCopy = () => {\r\n\r\n        // Sacamos disabled para poder hacer el copy\r\n        inputRef.current.disabled = false;\r\n\r\n        // Seleccionamos, y copiamos\r\n        inputRef.current.select();\r\n        document.execCommand( 'copy' );\r\n\r\n        // Volvemos a poner el disabled\r\n        inputRef.current.disabled = true;\r\n\r\n        // Activamos notificación\r\n        setShowNotification( true );\r\n    }\r\n\r\n    const backToUploader = (  ) => {\r\n        setSectionShown( 'uploader' );\r\n        setImage( null );\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n\r\n            <BackToUploader\r\n                onClick={ backToUploader }\r\n            >\r\n                Upload another image!\r\n            </BackToUploader>\r\n\r\n            <Tick />\r\n\r\n            <Typography as=\"h2\">\r\n                Uploaded Successfully!\r\n            </Typography>\r\n\r\n            <ImageUploaded\r\n                imageUrl={ imageUrl }\r\n            />\r\n\r\n            <Link>\r\n                <Input\r\n                    imageUrl={ imageUrl }\r\n                    ref={ inputRef }\r\n                />\r\n                <CopyBtn onClick={ handleCopy } >\r\n                    Copy Link\r\n                </CopyBtn>\r\n            </Link>\r\n\r\n            { ( showNotification ) &&\r\n                <Notification\r\n                    ref={ notificationRef }\r\n                >\r\n                    Copied to Clipboard!\r\n                </Notification> }\r\n\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { ThemeProvider } from 'styled-components';\r\n\r\nimport { useNotification } from 'hooks/useNotification';\r\nimport { Uploader } from 'App/Uploader/Uploader';\r\nimport { Uploading } from 'App/Uploading/Uploading';\r\nimport { Uploaded } from 'App/Uploaded/Uploaded';\r\nimport { Notification } from 'shared';\r\nimport { theme } from 'styles/themes';\r\n\r\nexport const App = () => {\r\n    \r\n    const [ notificationRef, showNotification, setShowNotification ] = useNotification();    \r\n    const [ sectionShown, setSectionShown ] = useState( 'uploader' );\r\n    const [ image, setImage ] = useState( null );\r\n    const [ imageUrl, setImageUrl ] = useState( '' );\r\n    const [ error, setError ] = useState( '' );\r\n\r\n    useEffect(() => {\r\n        if ( error ) {\r\n            setShowNotification( true );\r\n        }\r\n    }, [ error, setShowNotification ] );\r\n\r\n    return (\r\n        <ThemeProvider theme={ theme }>\r\n            { ( sectionShown === 'uploader' ) &&\r\n                <Uploader\r\n                    setSectionShown={ setSectionShown }\r\n                    image={ image }\r\n                    setImage={ setImage }\r\n                    setError={ setError }\r\n                /> }\r\n\r\n            { ( sectionShown === 'uploading' ) &&\r\n                <Uploading\r\n                    image={ image }\r\n                    setImage={ setImage }\r\n                    setSectionShown={ setSectionShown }\r\n                    setImageUrl={ setImageUrl }\r\n                    setError={ setError }\r\n                /> }\r\n\r\n            { ( sectionShown === 'uploaded' ) &&\r\n                <Uploaded\r\n                    imageUrl={ imageUrl }\r\n                    setSectionShown={ setSectionShown }\r\n                    setImage={ setImage }\r\n                /> }\r\n\r\n            { ( showNotification ) &&\r\n                <Notification\r\n                    ref={ notificationRef }\r\n                    bg_color={ theme.colors.error }\r\n                >\r\n                    { error }\r\n                </Notification> }\r\n        </ThemeProvider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { GlobalStyles } from 'styles/GlobalStyles';\r\nimport { App } from './App';\r\n\r\nimport './styles/normalize.min.css';\r\nimport './styles/animations.css';\r\n\r\nReactDOM.render(\r\n    <>\r\n        <GlobalStyles />\r\n        <App />\r\n    </>,\r\n    document.getElementById( 'root' )\r\n);\r\n\r\n"],"sourceRoot":""}